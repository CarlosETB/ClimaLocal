{"version":3,"sources":["App.js","index.js"],"names":["App","useState","location","setLocation","weather","setWeather","getWeather","lat","long","a","axios","get","params","lon","appid","process","lang","units","res","data","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Math","floor","ReactDOM","render","document","getElementById"],"mappings":"0RAgEeA,MA5Df,WAAgB,IAAD,EACmBC,oBAAS,GAD5B,mBACNC,EADM,KACIC,EADJ,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,KAITC,EAAU,sCAAG,WAAOC,EAAKC,GAAZ,eAAAC,EAAA,qEACCC,IAAMC,IAAI,iDAAkD,CAC1EC,OAAQ,CACNL,IAAKA,EACLM,IAAKL,EACLM,MAAOC,mCACPC,KAAM,KACNC,MAAO,YAPI,OACXC,EADW,OAUfb,EAAWa,EAAIC,MAVA,yCAAH,wDAoBd,OAPAC,oBAAU,WACRC,UAAUC,YAAYC,mBAAmB,SAACC,GACxClB,EAAWkB,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WACrDxB,GAAY,MAEb,KAEc,IAAbD,EAEA,kBAAC,WAAD,KACE,8FAGiB,IAAZE,EAEP,kBAAC,WAAD,KACE,0DAKF,kBAAC,WAAD,KACE,8DACA,8BACE,6BACE,2BAAIA,EAAO,QAAY,GAAnB,aACJ,4BAAKwB,KAAKC,MAAMzB,EAAO,KAAP,MAAhB,SAEF,+BACA,6BACE,4BACE,sDAAyBwB,KAAKC,MAAMzB,EAAO,KAAP,UAApC,QACA,mDAAyBwB,KAAKC,MAAMzB,EAAO,KAAP,UAApC,QACA,2CAAcwB,KAAKC,MAAMzB,EAAO,KAAP,UAAzB,QACA,yCAAewB,KAAKC,MAAMzB,EAAO,KAAP,UAA1B,UCnDd0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5635127e.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n \nfunction App() {\n  const [location, setLocation] = useState(false);\n  const [weather, setWeather] = useState(false);\n\n  let getWeather = async (lat, long) => {\n    let res = await axios.get(\"http://api.openweathermap.org/data/2.5/weather\", {\n      params: {\n        lat: lat,\n        lon: long,\n        appid: process.env.REACT_APP_OPEN_WHEATHER_KEY,\n        lang: 'pt',\n        units: 'metric'\n      }  \n    });\n    setWeather(res.data);\n  }\n\n  useEffect(()=> {\n    navigator.geolocation.getCurrentPosition((position)=> {\n      getWeather(position.coords.latitude, position.coords.longitude);\n      setLocation(true)\n    })\n  }, [])\n  \n  if (location === false) {\n    return (\n      <Fragment>\n        <h1>- Você precisa habilitar a localização no browser -</h1>\n      </Fragment>\n    )\n  } else if (weather === false) {\n    return (\n      <Fragment>\n        <h1>- Carregando o clima... -</h1>\n      </Fragment>\n    )\n  } else {\n    return (\n      <Fragment>\n        <h1>- Clima nas suas Coordenadas -</h1>\n        <form>\n          <div>\n            <p>{weather['weather'][0]['description']}</p> \n            <h3>{Math.floor(weather['main']['temp'])}°</h3>\n          </div>\n          <line />\n          <div>\n            <ul>\n              <li>Temperatura máxima: {Math.floor(weather['main']['temp_max'])}°</li>\n              <li>Temperatura minima: {Math.floor(weather['main']['temp_min'])}°</li>\n              <li>Pressão: {Math.floor(weather['main']['pressure'])} hpa</li>\n              <li>Humidade: {Math.floor(weather['main']['humidity'])}%</li>\n            </ul>\n          </div>\n        </form>\n      </Fragment>\n    );\n  }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}