{"version":3,"sources":["App.js","index.js"],"names":["App","useState","location","setLocation","weather","setWeather","getWeather","lat","long","a","axios","get","params","lon","appid","process","REACT_APP_OPEN_WHEATHER_KEY","lang","units","res","data","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","ReactDOM","render","document","getElementById"],"mappings":"+PAwDeA,MArDf,WAAgB,IAAD,EACmBC,oBAAS,GAD5B,mBACNC,EADM,KACIC,EADJ,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,KAITC,EAAU,sCAAG,WAAOC,EAAKC,GAAZ,eAAAC,EAAA,qEACCC,IAAMC,IAAI,iDAAkD,CAC1EC,OAAQ,CACNL,IAAKA,EACLM,IAAKL,EACLM,MAAOC,8CAAYC,4BACnBC,KAAM,KACNC,MAAO,YAPI,OACXC,EADW,OAUfd,EAAWc,EAAIC,MAVA,yCAAH,wDAoBd,OAPAC,oBAAU,WACRC,UAAUC,YAAYC,mBAAmB,SAACC,GACxCnB,EAAWmB,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WACrDzB,GAAY,MAEb,KAEc,IAAbD,EAEA,kBAAC,WAAD,qEAImB,IAAZE,EAEP,kBAAC,WAAD,8BAMA,kBAAC,WAAD,KACE,2DAAiCA,EAAO,QAAY,GAAnB,YAAjC,KACA,6BACA,4BACE,kDAAwBA,EAAO,KAAP,KAAxB,QACA,sDAAyBA,EAAO,KAAP,SAAzB,QACA,mDAAyBA,EAAO,KAAP,SAAzB,QACA,2CAAcA,EAAO,KAAP,SAAd,QACA,yCAAeA,EAAO,KAAP,SAAf,QC7CVyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fcdb852b.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n \nfunction App() {\n  const [location, setLocation] = useState(false);\n  const [weather, setWeather] = useState(false);\n\n  let getWeather = async (lat, long) => {\n    let res = await axios.get(\"http://api.openweathermap.org/data/2.5/weather\", {\n      params: {\n        lat: lat,\n        lon: long,\n        appid: process.env.REACT_APP_OPEN_WHEATHER_KEY,\n        lang: 'pt',\n        units: 'metric'\n      }  \n    });\n    setWeather(res.data);\n  }\n\n  useEffect(()=> {\n    navigator.geolocation.getCurrentPosition((position)=> {\n      getWeather(position.coords.latitude, position.coords.longitude);\n      setLocation(true)\n    })\n  }, [])\n  \n  if (location === false) {\n    return (\n      <Fragment>\n        Você precisa habilitar a localização no browser o/\n      </Fragment>\n    )\n  } else if (weather === false) {\n    return (\n      <Fragment>\n        Carregando o clima...\n      </Fragment>\n    )\n  } else {\n    return (\n      <Fragment>\n        <h3>Clima nas suas Coordenadas ({weather['weather'][0]['description']})</h3>\n        <hr/>\n        <ul>\n          <li>Temperatura atual: {weather['main']['temp']}°</li>\n          <li>Temperatura máxima: {weather['main']['temp_max']}°</li>\n          <li>Temperatura minima: {weather['main']['temp_min']}°</li>\n          <li>Pressão: {weather['main']['pressure']} hpa</li>\n          <li>Humidade: {weather['main']['humidity']}%</li>\n        </ul>\n      </Fragment>\n    );\n  }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}